service: no-agenda-mixer

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 3008
  timeout: 300
  environment:
    S3_BUCKET: ${self:custom.s3Bucket}
    STAGE: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:custom.s3Bucket}/*
            - arn:aws:s3:::${self:custom.s3Bucket}
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource:
            - arn:aws:secretsmanager:${self:provider.region}:*:secret:no-agenda-mixer/*

functions:
  app:
    handler: lambda_handler.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
    layers:
      - arn:aws:lambda:${self:provider.region}:770693421928:layer:Klayers-p39-requests:15

custom:
  s3Bucket: no-agenda-mixer-${self:provider.stage}
  pythonRequirements:
    dockerizePip: false
    layer: true
    slim: true
    strip: false
    zip: true
    pythonBin: python3
    noDeploy:
      - boto3
      - botocore
# Custom domain disabled for now
  # customDomain:
  #   domainName: mixer.noagenda.ai
  #   stage: ${self:provider.stage}
  #   basePath: ''
  #   certificateName: '*.noagenda.ai'
  #   createRoute53Record: true
  #   endpointType: 'edge'
  #   securityPolicy: tls_1_2

plugins:
  - serverless-python-requirements

resources:
  Resources:
    S3BucketMixer:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bucket}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
              AllowedOrigins: ['*']
              MaxAge: 3000
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Comment: No Agenda Mixer CloudFront Distribution
          Origins:
            - Id: S3Origin
              DomainName: ${self:custom.s3Bucket}.s3.amazonaws.com
              S3OriginConfig:
                OriginAccessIdentity: ''
            - Id: APIGateway
              DomainName:
                Fn::Join:
                  - ''
                  - - Ref: ApiGatewayRestApi
                    - '.execute-api.'
                    - ${self:provider.region}
                    - '.amazonaws.com'
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          DefaultRootObject: ''
          DefaultCacheBehavior:
            TargetOriginId: APIGateway
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            Compress: true
            ForwardedValues:
              QueryString: true
              Headers:
                - Accept
                - Accept-Encoding
                - Authorization
                - Content-Type
                - Origin
                - Referer
              Cookies:
                Forward: all
          CacheBehaviors:
            - PathPattern: '/static/*'
              TargetOriginId: S3Origin
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - GET
                - HEAD
              Compress: true
              ForwardedValues:
                QueryString: false
                Cookies:
                  Forward: none
              MinTTL: 86400
              DefaultTTL: 86400
              MaxTTL: 31536000
          PriceClass: PriceClass_100
          ViewerCertificate:
            CloudFrontDefaultCertificate: true